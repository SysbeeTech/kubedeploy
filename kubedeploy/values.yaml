# Default values for kubedeploy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- (int) Number of pods to load balance across
replicaCount: 1

# -- available deployment modes currently supported:
# Deployment
# Job
# Statefulset
deploymentMode: Deployment

# -- Allow override of kubernetes version
# by default this will be automatically detected and requires no modification
kubeVersionOverride: ""

jobspec:
  # -- define restart policy for jobs if deploymentMode is: Job. Please see https://kubernetes.io/docs/concepts/workloads/controllers/job/#handling-pod-and-container-failures
  restartPolicy: OnFailure
  # -- define command for job
  command: []
  # -- define args for job
  args: []
  # -- define job paralelisam see: https://kubernetes.io/docs/concepts/workloads/controllers/job/#controlling-parallelism
  parallelism: 1
  # -- define job backoff limit, see: https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy
  backoffLimit: 3


initContainers:
  # -- define if we should deploy init container within a pod
  # see https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  enabled: false
  # -- default initContainers pull policy
  pullPolicy: IfNotPresent
  # -- Define init containers resources
  resources: {}
    # If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- (list) sequential list of init containers. Each init container must complete successfully before the next one starts
  # @default -- see below
  containers:
      # initContainers.containers[0].name -- (required) define init container name
      # @default -- busybox-init
    - name: "busybox-init"
      # -- (required) define initContainer repository
      repository: busybox
      # -- Overrides the image tag whose default is latest
      tag: "latest"
      # -- Define custom command for initContainer to run
      command: ["exit", "0"]
      # -- Define custom arguments for initContainer
      args: []

healthcheck:
  # -- define custom healthcheck probes for container, otherwise try to use automatic http probes if http port detected
  enabled: false
  probes:
    # -- define livenessProbe
    livenessProbe: {}
    # -- define readinessProbe
    readinessProbe: {}

image:
  # -- define container repositor
  repository: nginx
  # -- default container pull policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # -- Define custom command for image to run
  command: []
  # -- Define custom command for image to run
  args: []

# -- define [ImagePullSecrets](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#podspec-v1-core)
imagePullSecrets: []

# -- Override release name used in calculated "releasename-chartname" naming
nameOverride: ""
# -- Override full resource names instead of using calculated "releasename-chartname" naming
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- define pod [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Define ports that container will listen on
# see: [containerPort](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#containerport-v1-core)
ports: []
  #- name: http
  #  containerPort: 80
  #  protocol: TCP
  # - name: prometheus
  #   containerPort: 9000
  #   protocol: TCP

# -- Define environment variables for container
# see: [env](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#envvar-v1-core)
env: []
  # - name: ENV1
  #   value: Env-value
  #   # see: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#envfromsource-v1-core
  # - name: fromvalue
  #   valueFrom:
  #     secretKeyRef:
  #       name: secret-name
  #       key: key-name

service:
  # -- Service type see [Reference](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
  type: ClusterIP
  # -- controls if the service object should be deployed to cluster
  enabled: true
  # -- (list) define port for service
  # see: [servicePort](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#serviceport-v1-core)
  # @default -- see list values
  ports:
      # service.ports[0].port (int, required) -- Define port on which service will run
      # @default -- 80
    - port: 80
      # -- (string, required) Define name of the port exposed by the container
      targetPort: http
      # -- (required) Define service protocol. [Supported protocols](https://kubernetes.io/docs/concepts/services-networking/service/#protocol-support)
      protocol: TCP
      # -- (string, required) Name of the service port, should match container port name
      name: http

# -- define [ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) object
# @default -- see object values
ingress:
  # -- enable ingres for deployment
  enabled: false
  # -- ingress class name
  className: ""
  # -- default ingress pathType
  pathType: ImplementationSpecific
  # -- additional ingress annotations
  # @default -- defaults to haproxy ingress and letsencrypt issuer
  annotations:
    kubernetes.io/ingress.class: haproxy
    cert-manager.io/cluster-issuer: letsencrypt
  # -- (list) Ingress host list.
  # @default -- see list values
  hosts:
      # ingress.hosts[0].host -- (string, required) define ingress hostname
      # @default -- chart-example.local
    - host: chart-example.local
      # -- (list) ingress host paths
      paths:
        - path: /
  # -- (list) Ingress TLS list
  # @default -- see list values
  tls:
    # ingress.tls[0].secretName -- (string, required) name of the secret to use for storing ssl certificate
    # @ default -- chart-example-tls
    - secretName: chart-example-tls
      # -- (list) list of TLS enabled ingress hosts
      hosts:
        - chart-example.local

persistency:

  # -- (string) define custom name for persistent storage class name
  # @default - uses cluster default storageClassName
  storageClassName:

  # -- Enable support for persistent volumes on deployments.
  # Currently supported only in deploymentMode Deployment with replicaCount = 1
  # Or in Statefulset deploymentMode with any number of replicas
  enabled: false
  capacity:
    # -- define storage capacity
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  # -- where will the persistent volume will be mounted in container
  mountPath: "/data"

# -- We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. See [resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
# for syntax
resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- enable deployment autoscaling feature, available only with Deployment deploymentMode
  enabled: false
  # -- number of minimum replicas for autoscaling
  minReplicas: 1
  # -- number of max replicas for autoscaling
  maxReplicas: 10
  # -- target cpu utilization as percentage of resource.requests.cpu
  targetCPUUtilizationPercentage: 80
  # -- (int) target memory utilization as percentage of resource.requests.mem
  targetMemoryUtilizationPercentage:

# -- define custom [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
nodeSelector: {}

# -- define pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []

# -- define pod [affinity](https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/)
affinity: {}

podDisruptionBudget:
  # -- enable and define pod disruption budget default (off)
  # see: [podDisruptionBudget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/)
  enabled: false
  # -- minimum available replicas
  minAvailable: 1
  # -- (int) maximum unavailable replicas
  maxUnavailable:

## Monitoring

# -- Parameters for the Prometheus [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.ServiceMonitor) or [PodMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.PodMonitor) objects.
# @default -- see below
monitoring:
  # -- Enable Monitoring if service is enabled it will default to ServiceMonitor otherwise PodMonitor will be used
  enabled: false
  # -- Provide additional labels to the ServiceMonitor metadata
  labels: {}
  # -- Additional metric labels
  targetLabels: []
  # -- Provide named service port used for scraping
  scrapePort: metrics
  # -- Provide HTTP path to scrape for metrics.
  scrapePath: /metrics
  # -- Provide interval at which metrics should be scraped
  scrapeInterval: 20s
  # -- Timeout after which the scrape is ended If not specified
  scrapeTimeout: 30s
  # -- HTTP scheme to use for scraping.
  scheme: http
  # -- TLS configuration to use when scraping the endpoint
  tlsConfig: {}
  # -- Provide additional metricRelabelings to apply to samples before ingestion.
  metricRelabelings: []
  # -- Provide additional relabelings to apply to samples before scraping
  relabelings: []
