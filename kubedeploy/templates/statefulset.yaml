{{- if eq (toString .Values.deploymentMode) "Statefulset" }}
{{- $fullName := include "kubedeploy.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kubedeploy.fullname" . }}
  labels:
    {{- include "kubedeploy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kubedeploy.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "kubedeploy.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubedeploy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubedeploy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers.enabled }}
      initContainers:
        {{- range .Values.initContainers.containers }}

        - name: {{ required "Please define valid init container name" .name }}
          image: "{{ required "Please define valid init container repository" .repository }}:{{ .tag | default "latest" }}"
          command:
            {{- toYaml .command |nindent 12 }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ $.Values.initContainers.pullPolicy }}
          {{- with $.Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if and ($.Values.persistency.enabled) (lt (int $.Values.replicaCount) 2) }}
          volumeMounts:
            - mountPath: {{ $.Values.persistency.mountPath }}
              name: {{ $fullName }}-vol
          {{- end }}
          resources:
            {{- toYaml $.Values.initContainers.resources | nindent 12 }}
        {{- end }}
      {{- end }}

      containers:
        - name: {{ include "kubedeploy.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            {{- toYaml .Values.image.command |nindent 12 }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.ports }}
          ports:
             {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- if .Values.persistency.enabled }}
          volumeMounts:
            - mountPath: {{ .Values.persistency.mountPath }}
              name: {{ $fullName }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

  {{- if .Values.persistency.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ $fullName }}
      spec:
        accessModes:
        {{- range .Values.persistency.accessModes }}
          - {{ . }}
        {{- end }}
        storageClassName: {{ .Values.persistency.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistency.capacity.storage }}
  {{- end }}
{{- end }}
