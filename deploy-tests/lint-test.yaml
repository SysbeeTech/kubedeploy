---
helmDefaults:
  atomic: true
  wait: true
  createNamespace: true

releases:
  # simple deployment testing
  - name: test
    namespace: deployment
    chart: ../kubedeploy
    installed: true
    values:
      - deploymentMode: Deployment
      - replicaCount: 2
      - configMapHash: true
      - configMaps:
        - name: kubedeploy-configmap
          mount: true
          mountPath: /data/confmap
          data:
            kubedeploy: |+
              configmap values
        - name: kubedeploy2-configmap
          mount: true
          mountPath: /data/confmap/kubedeploy2
          subPath: kubedeploy2
          data:
            kubedeploy2: |+
              configmap values
        - name: kubedeploy3-configmap
          data:
            config: |+
              config3
        - name: envfrom-configmap
          mount: False
          data:
            ENV_VAR1: "value1"
            ENV_VAR2: "value2"
      - extraSecrets:
        - name: opaque-secret
          type: Opaque # Optional - Default: Opaque if unspecified
          mount: True # Optional - should this sercret be mounted as volume on containers
          mountPath: /mnt/secret-vol0 # Optional - define mount path for this secret
          data:
            key: value # value will be base64 encoded by default

        - name: tls-secret
          type: kubernetes.io/tls
          data:
            tls.crt: |
              --------BEGIN CERTIFICATE-----
              MIIC2DCCAcCgAwIBAgIBATANBgkqh ...
            tls.key: |
              -----BEGIN RSA PRIVATE KEY-----
              MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ ...
            tls.ca: |
              --------BEGIN CERTIFICATE-----
              MIIC2DCCAcCgAwIBAgIBATANBgkqh ...

        - name: ssh-key-secret
          type: kubernetes.io/ssh-auth
          data:
            ssh-privatekey: |
              MIIEpQIBAAKCAQEAulqb/Y ...

      - initContainers:
          enabled: true
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
      - additionalContainers:
          enabled: true
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
          containers:
            - name: "busybox-custom"
              repository: busybox
              tag: "latest"
              command: ["sh", "-c", "while true; do sleep 30; done;"]
              ports:
                - name: http2
                  containerPort: 80
                  protocol: TCP
              resources:
                limits:
                  cpu: 100m
                  memory: 20Mi
                requests:
                  cpu: 50m
                  memory: 10Mi
              healthcheck:
                enabled: true
                probes:
                  livenessProbe:
                    exec:
                      command:
                      - echo
                      - "alive"
                    initialDelaySeconds: 5
                    periodSeconds: 5
      - healthcheck:
          enabled: true
          livenessProbe:
            httpGet:
              port: http
              path: /eth/v1/node/health
            initialDelaySeconds: 180
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              port: http
              path: /eth/v1/node/health
            initialDelaySeconds: 180
      - image:
          repository: nginx
          tag: latest
          command:
            - test-command
          args:
            - test-args
          terminationGracePeriodSeconds: 60
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
            preStop:
              exec:
                command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]
      - imagePullSecrets:
          - name: regcred
      - fullnameOverride: test
      - minReadySeconds: 30
      - serviceAccount:
          annotations:
            service-account-annotation-key: value
      - podAnnotations:
          pod-annotation-key: value
      - podExtraLabels:
          environment: dev
      - podSecurityContext:
          fsGroup: 2000
      - securityContext:
          runAsUser: 100
          runAsNonRoot: true
      - networkPolicy:
          enabled: true
          ingress:
            - from:
                - ipBlock:
                    cidr: 172.17.0.0/16
                    except:
                      - 172.17.1.0/24
                - namespaceSelector:
                    matchLabels:
                      project: myproject
                - podSelector:
                    matchLabels:
                      role: frontend
              ports:
                - protocol: TCP
                  port: 6379
          egress:
            - to:
              - ipBlock:
                  cidr: 10.0.0.0/24
              ports:
                - protocol: TCP
                  port: 5978
      - ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: metrics
            containerPort: 9000
            protocol: TCP
      - env:
        - name: ENV1
          value: EnvValue
      - envFrom:
        - configMapRef:
            name: test-envfrom-configmap
      - extraVolumeMounts:
        ## Mount existing volume claim
        - name: extra-volume-0
          mountPath: /mnt/volume0
          readOnly: true
          existingClaim: volume-claim
        ## Mount host path
        - name: extra-volume-1
          mountPath: /mnt/volume1
          readOnly: true
          hostPath: /usr/shared/
        ## Mount CSI volume
        - name: secrets
          mountPath: /mnt/volume2
          csi: true
          data:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "secret-provider-name"
        ## Mount emtpyDir
        - name: empty-dir-vol
          mountPath: /mnt/volume3
        ## Mount secret
        - name: my-secret
          mountPath: /mnt/volume4
          secretName: my-secret
          optional: true
      - service:
          enabled: true
          headless: true
      - ingress:
          enabled: true
          className: haproxy
          hosts:
            - host: chart-examlple.local
              paths:
                - path: /
                  svcPort: 8080
                  pathType: Prefix
      - resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
      - keda:
          enabled: true
          scaledObject:
            annotations:
              scaled-object-annnotation-key: value
          behavior:
            scaleDown:
              stabilizatoinWindowSecodns: 300
          triggers:
            - type: prometheus
              metadata:
                serverAddress: http://prometheus:9090
      - nodeSelector:
          system: true
      - topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: testing-replicas
      - podAntiAffinity: "soft"
      - affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - antarctica-east1
                      - antarctica-west1
      - podDisruptionBudget:
          enabled: true
      - monitoring:
          enabled: true
      - extraObjects:
          - apiVersion: v1
            kind: Secret
            metadata:
              name: secret-basic-auth
            type: kubernetes.io/basic-auth
            stringData:
              username: admin
              password: t0p-S3c43t
