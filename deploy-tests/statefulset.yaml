---
helmDefaults:
  atomic: true
  wait: true
  createNamespace: true

environments:
  default:
    values:
      - common-values.yaml
---
templates:
  default: &default
    namespace: statefulset
    chart: ../{{ requiredEnv "CHART_NAME" }}
    installed: true
    valuesTemplate:
      - fullnameOverride: '{{`{{ .Release.Name }}`}}'
      - deploymentMode: Statefulset
      - image:
          repository: nginx
          tag: latest

releases:
  # simple statefulset testing
  - name: {{requiredEnv "RELEASE_NAME"}}
    labels:
      test: simple
    <<: *default

  # statefulset with init and additional containers, 2 replicas with soft antiaffinity
  # and min ready seconds set to 30
  - name: {{requiredEnv "RELEASE_NAME"}}-multi-container
    labels:
      test: multi-container
    <<: *default
    values:
      - replicaCount: 2
      - podAntiAffinity: "soft"
      - minReadySeconds: 5
      - persistency:
          enabled: true
          capacity:
            storage: {{ .Values.persistency.size }}
      - additionalContainers:
          enabled: true
      - initContainers:
          enabled: true

  # statefulset with configmaps and additional containers
  - name: {{requiredEnv "RELEASE_NAME"}}-configmaps
    labels:
      test: configmaps
    <<: *default
    values:
      - persistency:
          enabled: true
          capacity:
            storage: {{ .Values.persistency.size }}
      - additionalContainers:
          enabled: true
      - configMapHash: true
      - configMaps:
        - name: kubedeploy-configmap
          mount: true
          mountPath: /data/confmap
          data:
            kubedeploy: |+
              configmap values
        - name: kubedeploy2-configmap
          data:
            config: |+
              config2
  # statefulset with extraSecrets and additional containers
  - name: {{requiredEnv "RELEASE_NAME"}}-extrasecrets
    labels:
      test: configmaps
    <<: *default
    values:
      - persistency:
          enabled: true
          capacity:
            storage: {{ .Values.persistency.size }}
      - additionalContainers:
          enabled: true
      - extraSecrets:
        - name: opaque-secret
          type: Opaque # Optional - Default: Opaque if unspecified
          mount: True # Optional - should this sercret be mounted as volume on containers
          mountPath: /mnt/secret-vol0 # Optional - define mount path for this secret
          data:
            key: value # value will be base64 encoded by default

        - name: tls-secret
          type: kubernetes.io/tls
          data:
            tls.crt: |
              --------BEGIN CERTIFICATE-----
              MIIC2DCCAcCgAwIBAgIBATANBgkqh ...
            tls.key: |
              -----BEGIN RSA PRIVATE KEY-----
              MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ ...
            tls.ca: |
              --------BEGIN CERTIFICATE-----
              MIIC2DCCAcCgAwIBAgIBATANBgkqh ...

        - name: ssh-key-secret
          type: kubernetes.io/ssh-auth
          data:
            ssh-privatekey: |
              MIIEpQIBAAKCAQEAulqb/Y ...

  # statefulset with configmaps, additional containers and extraVolumeMounts
  - name: {{requiredEnv "RELEASE_NAME"}}-extravolumemounts
    labels:
      test: configmaps
    <<: *default
    values:
      - persistency:
          enabled: true
          capacity:
            storage: {{ .Values.persistency.size }}
      - additionalContainers:
          enabled: true
      - configMapHash: true
      - configMaps:
        - name: kubedeploy-configmap
          mount: true
          mountPath: /data/confmap
          data:
            kubedeploy: |+
              configmap values
        - name: kubedeploy2-configmap
          data:
            config: |+
              config2
      - extraObjects:
        - apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: volume-claim
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 2Gi
      - extraVolumeMounts:
        ## Mount existing volume claim
        - name: extra-volume-0
          mountPath: /mnt/volume0
          readOnly: true
          existingClaim: volume-claim
        ## Mount host path
        - name: extra-volume-1
          mountPath: /mnt/volume1
          readOnly: true
          hostPath: /tmp/
        ## Mount emtpyDir
        - name: empty-dir-vol
          mountPath: /mnt/volume3
        ## Mount secret
        - name: my-secret
          mountPath: /mnt/volume4
          secretName: my-secret
          optional: true
        # Mount configmap with subPath
        - name: subpath-configmap
          mountPath: /mnt/volume5/configmap.cfg
          subPath: configmap.cfg
          chartName: true
          configMapName: kubedeploy2-configmap
          items:
            - key: config
              path: configmap.cfg
